# Scaffolding generated by Casein v5.0.1.0

module Casein
  class ClientsController < Casein::CaseinController
  
    ## optional filters for defining usage according to Casein::AdminUser access_levels
    # before_filter :needs_admin, :except => [:action1, :action2]
    # before_filter :needs_admin_or_current_user, :only => [:action1, :action2]
  
    def index
      @casein_page_title = 'Clients'
  		@clients = Client.order(sort_order(:first_name)).paginate :page => params[:page]
    end
  
    def show
      @casein_page_title = 'View client'
      @client = Client.find params[:id]
    end
  
    def new
      @casein_page_title = 'Add a new client'
    	@client = Client.new
    end

    def create
      @client = Client.new client_params
    
      if @client.save
        flash[:notice] = 'Client created'
        redirect_to casein_clients_path
      else
        flash.now[:warning] = 'There were problems when trying to create a new client'
        render :action => :new
      end
    end
  
    def update
      @casein_page_title = 'Update client'
      
      @client = Client.find params[:id]
    
      if @client.update_attributes client_params
        flash[:notice] = 'Client has been updated'
        redirect_to casein_clients_path
      else
        flash.now[:warning] = 'There were problems when trying to update this client'
        render :action => :show
      end
    end
 
    def destroy
      @client = Client.find params[:id]

      @client.destroy
      flash[:notice] = 'Client has been deleted'
      redirect_to casein_clients_path
    end
  
    private
      
      def client_params
        params.require(:client).permit(:first_name, :last_name, :suffix, :address_1, :address_2, :city, :state, :zip_code, :cell_phone, :work_phone, :home_phone, :gender, :birth_date, :email_address, :signup_date, :emergency_contact_name, :emergency_contact_phone, :emergency_relationship_to_client, :client_age, :overall_balance, :client_ethnicity)
      end

  end
end